##########################
### Procedure 15 ########
#############################

### Specific parameter values are used for the experiments. It can be changed based on one requirement.
#######################################################################################################

CREATE OR REPLACE PROCEDURE wp_15() 
AS BEGIN
 
 DECLARE a INT := 1;
 
 DECLARE b INT := 2000;
 
 DECLARE x INT := 3000;
 
 DECLARE y INT := 4977;
 
 ss = 
		select 
				ca_county,
				d_qoy, 
				d_year,
				sum(ss_ext_sales_price) as store_sales 
		from 
				store_sales,
				date_dim,
				customer_address 
		where 
				ss_sold_date_sk = d_date_sk 
				and ss_addr_sk=ca_address_sk 
		group by 
				ca_county,
				d_qoy, 
				d_year;
 
 ws = 
		select 
				ca_county,
				d_qoy, 
				d_year,
				sum(ws_ext_sales_price) as web_sales 
		from 
				web_sales,
				date_dim,
				customer_address 
		where 
				ws_sold_date_sk = d_date_sk 
				and ws_bill_addr_sk=ca_address_sk 
		group by 
				ca_county,
				d_qoy, 
				d_year;
 

 v2 = 
		select 
				ss1.ca_county,
				ss1.d_year,
				ws2.web_sales/ws1.web_sales web_q1_q2_increase,
				ss2.store_sales/ss1.store_sales store_q1_q2_increase,
				ws3.web_sales/ws2.web_sales web_q2_q3_increase,
				ss3.store_sales/ss2.store_sales store_q2_q3_increase 
		from 
				:ss ss1,
				:ss ss2,
				:ss ss3,
				:ws ws1,
				:ws ws2,
				:ws ws3 
		where 
				ss1.d_qoy = 1 
				and ss1.d_year = 2002 
				and ss1.ca_county = ss2.ca_county 
				and ss2.d_qoy = 2 
				and ss2.d_year = 2002 
				and ss2.ca_county = ss3.ca_county 
				and ss3.d_qoy = 3 
				and ss3.d_year = 2002 
				and ss1.ca_county = ws1.ca_county 
				and ws1.d_qoy = 1 
				and ws1.d_year = 2002 
				and ws1.ca_county = ws2.ca_county 
				and ws2.d_qoy = 2 
				and ws2.d_year = 2002 
				and ws1.ca_county = ws3.ca_county 
				and ws3.d_qoy = 3 
				and ws3.d_year =2002 
				and 
					case 
						when 
							ws1.web_sales > 0 
						then 
							ws2.web_sales/ws1.web_sales 
						else 
							null 
						end 
						> 
					case 
						when 
							ss1.store_sales > 0 
						then 
							ss2.store_sales/ss1.store_sales 
						else 
							null 
						end 
				and 
					case 
						when 
							ws2.web_sales > 0 
						then 
							ws3.web_sales/ws2.web_sales 
						else 
							null 
						end 
						> 
					case 
						when 
							ss2.store_sales > 0 
						then 
							ss3.store_sales/ss2.store_sales 
						else 
							null 
						end 
		order by 
				ss1.ca_county,
				ss1.d_year, 
				web_q1_q2_increase, 
				store_q1_q2_increase, 
				web_q2_q3_increase, 
				store_q2_q3_increase;
 
 v4 = 
		select 
				c.c_customer_sk, 
				d_year, 
				count(*) cnt 
		from 
				customer_address a, 
				customer c, 
				store_sales s, 
				date_dim d, 
				item i 
		where 
				a.ca_address_sk = c.c_current_addr_sk 
				and c.c_customer_sk = s.ss_customer_sk 
				and s.ss_sold_date_sk = d.d_date_sk 
				and s.ss_item_sk = i.i_item_sk 
				and i.i_current_price > 1.2 * (
												select 
														avg(j.i_current_price) 
												from 
														item j 
												where 
														j.i_category = i.i_category
												) 
		GROUP BY c.c_customer_sk, 
		d_year;
 
 v5 = 
		select 
				* 
		from 
				:v2 
		WHERE 
				d_year between :a and :b;
 
 v6 = 
		select 
				* 
		from 
				:v4 
		WHERE 
				d_year between :a and :b;
 
 v7 = 
		select 
				:v6.c_customer_sk, 
				:v6.d_year 
		from 
				:v6, 
				:v5 
		WHERE 
				:v6.d_year =:v5.d_year;
 
 v8 = 
		SELECT 
				* 
		FROM 
				:v7 
		WHERE 
				c_customer_sk = :x;
 
 WHILE :x < :y DO
      
	  v8 = 
			select 
					* 
			from 
					:v8 
			
			UNION ALL (			
					SELECT 
							* 
					FROM 
							:v7 
					WHERE 
							c_customer_sk = :x
					);
      
	  x =:x + 1;
 
 END WHILE;
 
 select 
		avg(*) 
 from 
		:v8;

END;
